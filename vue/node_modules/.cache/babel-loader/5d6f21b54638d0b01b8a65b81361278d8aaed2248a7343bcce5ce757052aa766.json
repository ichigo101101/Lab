{"ast":null,"code":"export default {\n  name: \"Fix\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    submit() {\n      this.$request.post('/checks/add', this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功');\n          this.fromVisible = false;\n          this.form.id = this.id;\n          this.form.time = this.time;\n          this.form.status = '已处理';\n          this.$request.put('/fix/update', this.form).then(res => {\n            if (res.code === '200') {\n              this.id = null;\n              this.time = null;\n              this.load(1);\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n      this.id = row.id;\n      this.time = row.time;\n      this.form.labId = row.labId;\n      this.form.fixId = row.id;\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/fix/update' : '/fix/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/fix/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/fix/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/fix/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","title","required","message","trigger","content","ids","created","load","methods","submit","$request","post","then","res","code","$message","success","id","time","status","put","error","msg","handleAdd","handleEdit","row","stringify","labId","fixId","save","$refs","formRef","validate","valid","url","method","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Fix.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"search\">\r\n            <el-input placeholder=\"请输入报修说明\" style=\"width: 200px\" v-model=\"name\"></el-input>\r\n            <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n            <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\" v-if=\"user.role === 'ADMIN' && scope.row.status === '待处理'\">处理</el-button>\r\n        </div>\r\n\r\n        <div class=\"table\">\r\n            <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n                <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n                <el-table-column prop=\"studentName\" label=\"报修人\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"name\" label=\"报修说明\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"time\" label=\"报修时间\"></el-table-column>\r\n                <el-table-column prop=\"labName\" label=\"实验室\">\r\n                    <template v-slot=\"scope\">\r\n                        {{scope.row.typeName}} - {{scope.row.labName}}\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"labadminName\" label=\"实验室管理员\"></el-table-column>\r\n                <el-table-column prop=\"status\" label=\"处理状态\"></el-table-column>\r\n                <el-table-column prop=\"fixtime\" label=\"处理时间\"></el-table-column>\r\n\r\n                <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\r\n                        <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <el-dialog title=\"填写检修信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n                <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n                    <el-form-item prop=\"username\" label=\"检修人\">\r\n                        <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item prop=\"phone\" label=\"联系电话\">\r\n                        <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item prop=\"content\" label=\"检修说明\">\r\n                        <el-input v-model=\"form.content\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item prop=\"time\" label=\"检修时间\">\r\n                        <el-date-picker style=\"width: 100%\"\r\n                                        v-model=\"form.time\"\r\n                                        type=\"datetime\"\r\n                                        value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                                        placeholder=\"选择日期时间\">\r\n                        </el-date-picker>\r\n                    </el-form-item>\r\n                    <el-form-item prop=\"department\" label=\"检修单位\">\r\n                        <el-input v-model=\"form.department\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n                </div>\r\n            </el-dialog>\r\n\r\n            <div class=\"pagination\">\r\n                <el-pagination\r\n                        background\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"pageNum\"\r\n                        :page-sizes=\"[5, 10, 20]\"\r\n                        :page-size=\"pageSize\"\r\n                        layout=\"total, prev, pager, next\"\r\n                        :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Fix\",\r\n        data() {\r\n            return {\r\n                tableData: [],  // 所有的数据\r\n                pageNum: 1,   // 当前的页码\r\n                pageSize: 10,  // 每页显示的个数\r\n                total: 0,\r\n                name: null,\r\n                fromVisible: false,\r\n                form: {},\r\n                user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n                rules: {\r\n                    title: [\r\n                        {required: true, message: '请输入标题', trigger: 'blur'},\r\n                    ],\r\n                    content: [\r\n                        {required: true, message: '请输入内容', trigger: 'blur'},\r\n                    ]\r\n                },\r\n                ids: []\r\n            }\r\n        },\r\n        created() {\r\n            this.load(1)\r\n        },\r\n        methods: {\r\n            submit() {\r\n                this.$request.post('/checks/add', this.form).then(res => {\r\n                    if (res.code === '200') {\r\n                        this.$message.success('操作成功')\r\n                        this.fromVisible = false\r\n\r\n                        this.form.id = this.id\r\n                        this.form.time = this.time\r\n                        this.form.status = '已处理'\r\n                        this.$request.put('/fix/update', this.form).then(res => {\r\n                            if (res.code === '200') {\r\n                                this.id = null\r\n                                this.time = null\r\n                                this.load(1)\r\n                            } else {\r\n                                this.$message.error(res.msg)\r\n                            }\r\n                        })\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n            },\r\n            handleAdd() {   // 新增数据\r\n                this.form = {}  // 新增数据的时候清空数据\r\n                this.fromVisible = true   // 打开弹窗\r\n            },\r\n            handleEdit(row) {   // 编辑数据\r\n                this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n                this.fromVisible = true   // 打开弹窗\r\n                this.id = row.id\r\n                this.time = row.time\r\n                this.form.labId = row.labId\r\n                this.form.fixId = row.id\r\n                this.fromVisible = true   // 打开弹窗\r\n            },\r\n            save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n                this.$refs.formRef.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$request({\r\n                            url: this.form.id ? '/fix/update' : '/fix/add',\r\n                            method: this.form.id ? 'PUT' : 'POST',\r\n                            data: this.form\r\n                        }).then(res => {\r\n                            if (res.code === '200') {  // 表示成功保存\r\n                                this.$message.success('保存成功')\r\n                                this.load(1)\r\n                                this.fromVisible = false\r\n                            } else {\r\n                                this.$message.error(res.msg)  // 弹出错误的信息\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            del(id) {   // 单个删除\r\n                this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                    this.$request.delete('/fix/delete/' + id).then(res => {\r\n                        if (res.code === '200') {   // 表示操作成功\r\n                            this.$message.success('操作成功')\r\n                            this.load(1)\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                })\r\n            },\r\n            handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n                this.ids = rows.map(v => v.id)   //  [1,2]\r\n            },\r\n            delBatch() {   // 批量删除\r\n                if (!this.ids.length) {\r\n                    this.$message.warning('请选择数据')\r\n                    return\r\n                }\r\n                this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                    this.$request.delete('/fix/delete/batch', {data: this.ids}).then(res => {\r\n                        if (res.code === '200') {   // 表示操作成功\r\n                            this.$message.success('操作成功')\r\n                            this.load(1)\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                })\r\n            },\r\n            load(pageNum) {  // 分页查询\r\n                if (pageNum) this.pageNum = pageNum\r\n                this.$request.get('/fix/selectPage', {\r\n                    params: {\r\n                        pageNum: this.pageNum,\r\n                        pageSize: this.pageSize,\r\n                        name: this.name,\r\n                    }\r\n                }).then(res => {\r\n                    this.tableData = res.data?.list\r\n                    this.total = res.data?.total\r\n                })\r\n            },\r\n            reset() {\r\n                this.name = null\r\n                this.load(1)\r\n            },\r\n            handleCurrentChange(pageNum) {\r\n                this.load(pageNum)\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}